import { NextRequest, NextResponse } from 'next/server';
import { jwtVerify } from 'jose';

export async function verify(token: string, secret: string) {
  const { payload } = await jwtVerify(token, new TextEncoder().encode(secret));
  return payload;
}

export async function middleware(request: NextRequest) {
  const accessToken = request.cookies.get('accessToken');
  const jwtSecret: any = process.env.JWT_SECRET;

  if (!accessToken) {
    return NextResponse.redirect(new URL('/login', request.url));
  }
  console.log(accessToken);
  try {
    let payload = await verify(accessToken.value, jwtSecret);
    // Token is verified, continue to the next middleware or return response
    console.log('verified', payload);
  } catch (error) {
    console.log(error);
    // Token verification failed, redirect to login
    return NextResponse.redirect(new URL('/login', request.url));
  }
}

export const config = {
  matcher: [
    '/',
    '/leaderboard',
    '/chat',
    '/help',
    '/matchhistory',
    '/profile',
    '/settings',
    '/game',
  ],
};
