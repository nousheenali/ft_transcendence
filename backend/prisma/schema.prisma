generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------------------------------------------------------------------
model User {
  id        Int      @id @default(autoincrement()) // discuss uuid
  login     String   @unique
  email     String   @unique
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  channels Channel[]
  friends  Friend[]
}

// ---------------------------------------------------------------------
model Friend {
  id        Int      @id @default(autoincrement())
  friendId  Int      @unique
  createdAt DateTime @default(now())

  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

// ---------------------------------------------------------------------
model Channel {
  id Int @id @default(autoincrement())

  channelName String
  channelType Type
  createdBy   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Each channel has a list of members and a list of messages (one to many)
  channelMembers  ChannelMember[]
  // channelMessages ChannelMessages[]
  User            User?             @relation(fields: [userId], references: [id])
  userId          Int?
}

enum Type {
  PUBLIC
  PRIVATE
}

// ---------------------------------------------------------------------
model ChannelMember {
  id     Int @id @default(autoincrement())
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Channel   Channel? @relation(fields: [channelId], references: [id])
  channelId Int?
}

// ---------------------------------------------------------------------
// #################   The Rest is under development   #################
// ---------------------------------------------------------------------

// model Message {
//   id        Int      @id @default(autoincrement())
//   content   String
//   createdAt DateTime @default(now())
// }

// // ---------------------------------------------------------------------
// model DirectMessage {
//   id Int @id @default(autoincrement())

//   messageId  Int
//   senderId   Int
//   receiverId Int

//   seenAt    DateTime?
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
// }

// // ---------------------------------------------------------------------
// model ChannelMessages {
//   id Int @id @default(autoincrement())

//   messageId Int
//   channelId Int
//   senderId  Int

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   Channel Channel @relation(fields: [channelId], references: [id])
// }

// ---------------------------------------------------------------------
